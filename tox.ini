[tox]
envlist = py36,py37,py38,coverage,coveralls,docs,packaging,distr
skip_missing_interpreters = True
ignore_basepython_conflict = True

[testenv]
description = default settings for unspecified tests
usedevelop = False
skip_install = False
passenv = *
basepython = python3.6

[testenv:py36]
deps =
    -r{toxinidir}/requirements/tests.txt
commands =
    pytest -v tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:py37]
basepython = python3.7
deps =
    -r{toxinidir}/requirements/tests.txt
commands =
    pytest -v tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:py38]
basepython = python3.8
deps =
    -r{toxinidir}/requirements/tests.txt
commands =
    pytest -v tests/ --cov=pyDataverse --basetemp={envtmpdir}

[testenv:coverage]
description = create report for coverage
deps =
    -r{toxinidir}/requirements/tests.txt
commands =
    pytest tests/ --cov=pyDataverse --cov-report=term-missing --cov-report=xml --cov-report=html

[testenv:coveralls]
description = create reports for coveralls
deps =
    -r{toxinidir}/requirements/tests.txt
commands =
    pytest tests/ --doctest-modules -v --cov=pyDataverse

[testenv:pylint]
description = pylint for linting
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    pylint src/pyDataverse/
    pylint tests/

[testenv:mypy]
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    mypy src/pyDataverse/ setup.py tests/

[flake8]
max-line-length = 80
ignore = E129
exclude =
    src/pyDataverse/docs/source/conf.py
    .tox
    .egg

[testenv:flake8]
description = flake8 for style guide and docstring testing
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    pip uninstall -y flake8-pytest-style
    pip uninstall -y flake8-rst-docstrings
    flake8 src/pyDataverse/

[testenv:flake8_docs]
description = flake8 for style guide and docstring testing
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    pip uninstall -y flake8-blind-except
    pip uninstall -y flake8-builtins
    pip uninstall -y flake8-bandit
    pip uninstall -y flake8-breakpoint
    pip uninstall -y flake8-bugbear
    pip uninstall -y flake8-comprehensions
    pip uninstall -y flake8-requirements
    pip uninstall -y flake8-return
    flake8 --docstring-convention numpy src/pyDataverse/
    flake8 --docstring-convention numpy tests/

[testenv:flake8_tests]
description = flake8 for style guide and docstring testing
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    flake8 tests/

[testenv:black]
description = black for auto-formatting
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    black src/pyDataverse/
    black tests/

[testenv:pre-commit]
deps = pre-commit
commands =
    pre-commit run --all-files

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps =
    -r{toxinidir}/requirements/docs.txt
commands =
    sphinx-build -d src/pyDataverse/docs/build/docs_doctree src/pyDataverse/docs/source docs/build/html --color -b html {posargs}

[testenv:pydocstyle]
description = pydocstyle for auto-formatting
deps =
    -r{toxinidir}/requirements/docs.txt
commands =
    pydocstyle src/pyDataverse/
    pydocstyle tests/

[testenv:packaging]
description = check packaging with twine
skip_install = True
recreate = True
deps =
    -r{toxinidir}/requirements/packaging.txt
commands =
    python setup.py sdist bdist_wheel
    twine check dist/*

[testenv:distr]
description = install from dist
recreate = True
commands =
    pip freeze
    python -c "import pyDataverse; print(pyDataverse.__name__); print(pyDataverse.__version__)"

[testenv:pypitest]
description = install from test pypi
skip_install = True
recreate = True
commands =
    pip install --index-url https://test.pypi.org/simple/ pyDataverse
    pip freeze
    python -c "import pyDataverse; print(pyDataverse.__name__); print(pyDataverse.__version__)"

[testenv:pypi]
description = install from pypi
skip_install = True
recreate = True
commands =
    pip install pyDataverse
    pip freeze
    python -c "import pyDataverse; print(pyDataverse.__name__); print(pyDataverse.__version__)"

[testenv:radon-mc]
description = Radon McCabe number
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    radon cc src/pyDataverse/ -a

[testenv:radon-mi]
description = Radon Maintainability Index
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    radon mi src/pyDataverse/
    radon mi tests/

[testenv:radon-raw]
description = Radon raw metrics
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    radon raw src/pyDataverse/
    radon raw tests/

[testenv:radon-hal]
description = Radon Halstead metrics
deps =
    -r{toxinidir}/requirements/lint.txt
commands =
    radon hal src/pyDataverse/
    radon hal tests/
